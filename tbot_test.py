from typing import Any

import requests
import telebot
from telebot import types

API_URL = 'https://open.er-api.com/v6/latest/'
API_TOKEN = '8094863586:AAFdkqW3lRHy7zAvd9uhh8CmpzcT7LI6v0s'

bot = telebot.TeleBot(API_TOKEN)

global base_currency
base_currency = "USD"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
def get_exchange_rates(currency) -> str | Any:
    try:
        response = requests.get(f"{API_URL}{currency}")
        response.raise_for_status()
        data = response.json()
        return data['rates']
    except requests.RequestException as e:
        print(e)
        return None


def get_available_currencies():
    try:
        response = requests.get(f"{API_URL}USD")
        response.raise_for_status()
        data = response.json()
        return data['rates'].keys()
    except requests.RequestException as e:
        return str(e)


@bot.message_handler(commands=['start'])
def start_command(message: types.Message):
    start_menu(message)


def start_menu(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_rates = types.KeyboardButton("üìà –ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç")
    button_convert = types.KeyboardButton("üí± –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É")
    button_settings = types.KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    button_available_currencies = types.KeyboardButton("üí± –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã")

    markup.add(button_rates, button_convert, button_settings, button_available_currencies)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "üìà –ü–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç")
def rates_command(message: types.Message):
    global base_currency
    rates = get_exchange_rates(base_currency)
    if isinstance(rates, str):
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {rates}")
    else:
        rates_message = "\n".join([f"{currency}: {rate}" for currency, rate in rates.items()])
        bot.send_message(message.chat.id, f"–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç:\n{rates_message}")


@bot.message_handler(func=lambda message: message.text == "üí± –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã")
def available_currencies_command(message: types.Message):
    currencies = get_available_currencies()
    if isinstance(currencies, str):
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {currencies}")
    else:
        currencies_message = "\n".join(currencies)  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç
        bot.send_message(message.chat.id, f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n{currencies_message}")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã
@bot.message_handler(func=lambda message: message.text == "üí± –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É")
def convert_command(message: types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rates = get_exchange_rates('USD')

    if isinstance(rates, str):
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {rates}")
        return

    currency_buttons = [types.KeyboardButton(currency) for currency in rates.keys()]
    currency_buttons.insert(0, "BASE")
    markup.add(*currency_buttons)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å:", reply_markup=markup)
    bot.register_next_step_handler(message, process_currency_from)


def process_currency_from(message: types.Message):
    currency_from = message.text
    rates = get_exchange_rates('USD')

    if currency_from not in rates and currency_from != "BASE":
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        return convert_command(message)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    currency_buttons = [types.KeyboardButton(currency) for currency in rates.keys() if currency != currency_from]
    markup.add(*currency_buttons)

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å:", reply_markup=markup)
    bot.register_next_step_handler(message, lambda m: process_currency_to(m, currency_from))


def process_currency_to(message: types.Message, currency_from: str):
    currency_to = message.text
    rates = get_exchange_rates('USD')

    if currency_to not in rates:
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        return process_currency_from(message)

    # –ó–∞–ø—Ä–æ—Å —Å—É–º–º—ã –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ {currency_from} –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ {currency_to}:")
    bot.register_next_step_handler(message, lambda m: convert_currency(m, currency_from, currency_to))


def convert_currency(message: types.Message, currency_from: str, currency_to: str):
    try:
        global base_currency
        amount = float(message.text)
        rates = get_exchange_rates('USD')
        if currency_from == "BASE":
            currency_from = base_currency

        if currency_from in rates and currency_to in rates:
            converted_amount = amount * (rates[currency_to] / rates[currency_from])
            bot.send_message(message.chat.id, f"{amount} {currency_from} = {converted_amount:.2f} {currency_to}")
        else:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç.")
        start_menu(message)
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫
@bot.message_handler(func=lambda message: message.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
def settings_command(message: types.Message):
    bot.send_message(message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /save <–≤–∞–ª—é—Ç–∞>.")


@bot.message_handler(commands=['save'])
def save_settings_command(message: types.Message):
    global base_currency
    base_currency = message.text.split(' ', 1)[1].strip().upper() if len(message.text.split()) > 1 else ''

    rates = get_exchange_rates(base_currency)

    if base_currency in rates:
        bot.send_message(message.chat.id, f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞: {base_currency}.")
    else:
        base_currency = "USD"
        bot.send_message(message.chat.id, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞: {base_currency}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /rates –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.")


@bot.message_handler(func=lambda message: True)
def handle_unknown_message(message: types.Message):
    bot.send_message(message.chat.id, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.")


if __name__ == '__main__':
    bot.polling(none_stop=True)